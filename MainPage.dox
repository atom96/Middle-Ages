/**
@mainpage Dokumentacja Zadania Średniowiecze

# Średniowiecze

### Opis gry
Gra rozgrywa się na kwadratowej planszy `n*n` (`8 < n < 2^31`) i jest
przeznaczona dla dwóch graczy wykonujących na zmianę swoje tury
(rozpoczynając od pierwszego gracza). Każdy z graczy kontroluje swoje
jednostki należące do jednego z trzech typów: król, rycerz, chłop.
Na początku gry każdy gracz ma 1 króla, 1 chłopa i 2 rycerzy,
ustawionych jeden obok drugiego w poziomej linii na planszy w
kolejności król, chłop, rycerz, rycerz. Początkowe ustawienie
jednostek następuje poprzez wylosowanie pozycji królów
spośród pierwszych `n-3` kolumn, tak aby królowie byli od siebie
oddaleni o co najmniej 8 w metryce maksimum.

Podczas każdej tury gracz może ruszyć raz każdą swoją jednostką.
Ruch składa się z przesunięcia jej o 1 pole pionowo, poziomo, na skos
lub wykonania akcji (tylko przez chłopa). Gdy jednostka ruszy się na
pole zajmowane przez inną jednostkę, następuje walka. Gdy walczą ze
sobą dwie jednostki tego samego typu, obie giną. W przeciwnym wypadku
rycerz pokonuje króla lub chłopa, a król pokonuje chłopa. Nie można
ruszyć swojej jednostki na pole zajmowane przez inną swoją jednostkę
(aczkolwiek można najpierw przesunąć jedną jednostkę, a drugą
później przesunąć na zwolnione miejsce w tej samej turze).
Akcją możliwą do wykonania przez chłopa jest wyprodukowanie nowego rycerza
albo chłopa na jednym z sąsiednich (pionowo, poziomo lub po skosie)
wolnych pól, pod warunkiem że chłop stał w miejscu, nie wykonując akcji
przez poprzednie 2 tury. Innymi słowy chłop, który ruszył się w turze
`k`, a potem się już nie ruszał, może dopiero wyprodukować jednostkę w
turze `k+3`, następnie `k+6` itd.
Nowymi jednostkami można się ruszać od razu po wyprodukowaniu (tj.
gdy zostały wyprodukowane w turze `k`, to traktowane są jakby ostatnio
wykonały ruch w turze `k-1`).
Chłop, który od początku gry (tura 1)
się nie ruszał, może wyprodukować pierwszą jednostkę w turze 3, a każda
jednostka na początku gry może się od razu ruszyć. 

Gra kończy się w momencie, gdy król jednego z graczy zginie lub po
`k`-tej (`1 <= k < 2^31`) turze drugiego gracza. Wygrywa gracz
mający jedynego żywego króla. W przeciwnym wypadku mamy remis.

## Część 1
Napisz program interpretujący protokół komunikacyjny gracza
i obsługujący wiadomości dostawane na standardowym wejściu od obu graczy (w tym obie
wiadomości `INIT`, o czym za chwilę).
Po każdym ruchu (dokładniej, po każdej wiadomości innej niż `END_TURN`)
program powinien wypisać na standardowe wyjście tekstową reprezentację górnego
lewego rogu planszy (górne `10*10` pól, chyba że plansza jest
mniejsza). 
Jednostki pierwszego gracza powinny być zaznaczone wielkimi literami `K`, `R`, `C` (odpowiednio król, rycerz, chłop),
jednostki drugiego gracza małymi literami `k`, `r`, `c`,
a puste pola kropką. Przykład planszy:

    ..........
    .KRRC.....
    ..........
    ..........
    ....r.r...
    .....k....
    .....c....
    ..........
    ..........
    ..........

Na wyjściu nie powinno być żadnych dodatkowych znaków. 
Po każdej planszy powinna zostać wypisana pojedyncza pusta linia.

### Protokół komunikacyjny gracza
* `INIT n k p x1 y1 x2 y2` – informacja o stanie początkowym gry, osobno dla każdego gracza:
n – wielkość planszy, k – maksymalna liczba tur (na gracza), p – numer
gracza (1 lub 2), (x1, y1) – początkowe współrzędne
króla pierwszego gracza, (x2, y2) – początkowe współrzędne króla
drugiego gracza;
* `MOVE x1 y1 x2 y2` – ruch jednostką z pozycji (x1, y1) na (x2, y2);
* `PRODUCE_KNIGHT x1 y1 x2 y2` – wyprodukowanie przez chłopa
znajdującego się na polu (x1, y1) rycerza na sąsiednie pole (x2, y2);
* `PRODUCE_PEASANT x1 y1 x2 y2` – wyprodukowanie przez chłopa
znajdującego się na polu (x1, y1) chłopa na sąsiednie pole (x2, y2);
* `END_TURN` – informacja o końcu tury obecnie poruszającego się
gracza.

Każda wiadomość musi być zakończona znakiem nowej linii (`\n`),
a poszczególne jej argumenty mogą być oddzielone wyłącznie pojedynczymi
spacjami.
Na końcu wiadomości nie ma spacji.

Górny lewy róg planszy ma współrzędne (1, 1). Współrzędna `x` to numer kolumny, 
a współrzędna `y` to numer wiersza.

### Wyjście programu
Program wykrywa, kiedy gra się zakończyła i wtedy po przeprowadzeniu 
ostatniego ruchu wypisuje na standardowe wyjście diagnostyczne (`stderr`)
jeden z komunikatów: `player 1 won`, `player 2 won`
lub `draw` i zakończyć się z kodem 0.

W przypadku otrzymania niepoprawnego wejścia program wypisuje na standardowe
wyjście diagnostyczne `input error` i kończy się z kodem błędu 42.
 
*/
